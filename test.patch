--- LTE_fdd_enodeb/src/LTE_fdd_enb_mme.cc	2019-11-29 10:02:39.381640196 +0100
+++ openlte-code/LTE_fdd_enodeb/src/LTE_fdd_enb_mme.cc	2019-11-29 10:05:03.777644322 +0100
@@ -1,4 +1,4 @@
-// Make __FILE__ omit the path
+#line 2 "LTE_fdd_enb_mme.cc" // Make __FILE__ omit the path
 /*******************************************************************************
 
     Copyright 2013-2017 Ben Wojtowicz
@@ -94,7 +94,7 @@
 /********************************/
 LTE_fdd_enb_mme::LTE_fdd_enb_mme()
 {
-   sem_init(&start_sem, 0, 1);
+    sem_init(&start_sem, 0, 1);
     sem_init(&sys_info_sem, 0, 1);
     started = false;
 }
@@ -204,10 +204,6 @@
         case LIBLTE_MME_MSG_TYPE_ATTACH_REQUEST:
             parse_attach_request(msg, &nas_msg->user, &nas_msg->rb);
             break;
-        case LTE_FDD_ENB_MME_PROC_TAU_REQUEST:
-            send_tracking_area_update_request(msg, &nas_msg->user, &nas_msg->rb);
-            break;
-
         case LIBLTE_MME_MSG_TYPE_AUTHENTICATION_FAILURE:
             parse_authentication_failure(msg, nas_msg->user, nas_msg->rb);
             break;
@@ -511,7 +507,7 @@
                               "Received Attach Request for RNTI=%u and RB=%s",
                               (*user)->get_c_rnti(),
                               LTE_fdd_enb_rb_text[(*rb)->get_rb_id()]);
-       printf("cool");
+
     // Unpack the message
     liblte_mme_unpack_attach_request_msg(msg, &attach_req);
 
@@ -650,7 +646,7 @@
                 (*rb)->set_mme_state(LTE_FDD_ENB_MME_STATE_AUTHENTICATE);
                 (*user)->set_id(hss->get_user_id_from_imei(imei_num));
             }else{
-                (*user)->set_emm_cause(LIBLTE_MME_EMM_CAUSE_UE_IDENTITY_CANNOT_BE_DERIVED_BY_THE_NETWORK);
+                (*user)->set_emm_cause(LIBLTE_MME_EMM_CAUSE_UE_SECURITY_CAPABILITIES_MISMATCH);
                 (*rb)->set_mme_state(LTE_FDD_ENB_MME_STATE_REJECT);
             }
         }else{
@@ -659,16 +655,6 @@
         }
     }
 }
-void LTE_fdd_enb_mme::send_tracking_area_update_request(LIBLTE_BYTE_MSG_STRUCT  *msg,
-                                           LTE_fdd_enb_user       **user,
-                                           LTE_fdd_enb_rb         **rb)
-{
-    // Set the procedure
-
-(*rb) -> set_mme_procedure(LTE_FDD_ENB_MME_PROC_TAU_REQUEST);
-(*rb) -> set_mme_state(LTE_FDD_ENB_MME_STATE_TAU_REJECT);}
-
-
 void LTE_fdd_enb_mme::parse_authentication_failure(LIBLTE_BYTE_MSG_STRUCT *msg,
                                                    LTE_fdd_enb_user       *user,
                                                    LTE_fdd_enb_rb         *rb)
@@ -850,7 +836,7 @@
                 rb->set_mme_state(LTE_FDD_ENB_MME_STATE_AUTHENTICATE);
                 user->set_id(hss->get_user_id_from_imsi(imsi_num));
             }else{
-                user->set_emm_cause(LIBLTE_MME_EMM_CAUSE_UE_IDENTITY_CANNOT_BE_DERIVED_BY_THE_NETWORK);
+                user->set_emm_cause(LIBLTE_MME_EMM_CAUSE_UE_SECURITY_CAPABILITIES_MISMATCH);
                 rb->set_mme_state(LTE_FDD_ENB_MME_STATE_REJECT);
             }
         }else{
@@ -878,7 +864,7 @@
                 rb->set_mme_state(LTE_FDD_ENB_MME_STATE_AUTHENTICATE);
                 user->set_id(hss->get_user_id_from_imei(imei_num));
             }else{
-                user->set_emm_cause(LIBLTE_MME_EMM_CAUSE_UE_IDENTITY_CANNOT_BE_DERIVED_BY_THE_NETWORK);
+                user->set_emm_cause(LIBLTE_MME_EMM_CAUSE_UE_SECURITY_CAPABILITIES_MISMATCH);
                 rb->set_mme_state(LTE_FDD_ENB_MME_STATE_REJECT);
             }
         }else{
@@ -985,6 +971,7 @@
     LTE_FDD_ENB_RRC_CMD_READY_MSG_STRUCT      cmd_ready;
     LIBLTE_MME_SERVICE_REQUEST_MSG_STRUCT     service_req;
     uint32                                    i;
+
     interface->send_debug_msg(LTE_FDD_ENB_DEBUG_TYPE_INFO,
                               LTE_FDD_ENB_DEBUG_LEVEL_MME,
                               __FILE__,
@@ -1208,9 +1195,6 @@
         user->prepare_for_deletion();
         send_attach_reject(user, rb);
         break;
- case LTE_FDD_ENB_MME_STATE_TAU_REJECT:
-        send_tracking_area_update_reject(user, rb);
-break;
     case LTE_FDD_ENB_MME_STATE_AUTHENTICATE:
         send_authentication_request(user, rb);
         break;
@@ -1413,52 +1397,6 @@
                       (LTE_FDD_ENB_MESSAGE_UNION *)&cmd_ready,
                       sizeof(LTE_FDD_ENB_RRC_CMD_READY_MSG_STRUCT));
 }
-
-
-
-
-void LTE_fdd_enb_mme::send_tracking_area_update_reject(LTE_fdd_enb_user *user,
-                                         LTE_fdd_enb_rb   *rb)
-{
-    LTE_FDD_ENB_RRC_NAS_MSG_READY_MSG_STRUCT nas_msg_ready;
-    LIBLTE_MME_TRACKING_AREA_UPDATE_REJECT_MSG_STRUCT      ta_update_rej;
-    LIBLTE_BYTE_MSG_STRUCT                   msg;
-     ta_update_rej.emm_cause = user->get_emm_cause();
-     ta_update_rej.t3446_present = false;
-     liblte_mme_pack_tracking_area_update_reject_msg(
-     &ta_update_rej,
-     LIBLTE_MME_SECURITY_HDR_TYPE_PLAIN_NAS,
-     user->get_auth_vec()->k_nas_int,
-     user->get_auth_vec()->nas_count_dl,
-     LIBLTE_SECURITY_DIRECTION_DOWNLINK,
-     &msg);
-    // Queue the NAS message for RRC
-    rb->queue_rrc_nas_msg(&msg);
-
-    // Signal RRC for NAS message
-    nas_msg_ready.user = user;
-    nas_msg_ready.rb   = rb;
-    msgq_to_rrc->send(LTE_FDD_ENB_MESSAGE_TYPE_RRC_NAS_MSG_READY,
-                      LTE_FDD_ENB_DEST_LAYER_RRC,
-                      (LTE_FDD_ENB_MESSAGE_UNION *)&nas_msg_ready,
-                      sizeof(LTE_FDD_ENB_RRC_NAS_MSG_READY_MSG_STRUCT));
-
-    send_rrc_command(user, rb, LTE_FDD_ENB_RRC_CMD_RELEASE);
-// Unpack the message
-    liblte_mme_unpack_tracking_area_update_reject_msg(&msg, &ta_update_rej);
-
-    interface->send_ctrl_info_msg("user fully attached imsi=%s imei=%s",
-                                  user->get_imsi_str().c_str(),
-                                  user->get_imei_str().c_str());
-
-    rb->set_mme_state(LTE_FDD_ENB_MME_STATE_ATTACHED);
-}
-
-
-
-
-
-
 void LTE_fdd_enb_mme::send_attach_reject(LTE_fdd_enb_user *user,
                                          LTE_fdd_enb_rb   *rb)
 {
@@ -1474,7 +1412,7 @@
         imsi_num = user->get_temp_id();
     }
 
-    attach_rej.emm_cause           = 2;
+    attach_rej.emm_cause           = user->get_emm_cause();
     attach_rej.esm_msg_present     = false;
     attach_rej.t3446_value_present = false;
     liblte_mme_pack_attach_reject_msg(&attach_rej, &msg);
@@ -1483,8 +1421,6 @@
                               __FILE__,
                               __LINE__,
                               &msg,
-
-
                               "Sending Attach Reject for IMSI=%015llu, RNTI=%u, RB=%s",
                               imsi_num,
                               user->get_c_rnti(),
